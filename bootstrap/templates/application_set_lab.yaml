# templates/applicationset.yaml
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: multi-tenant-uplift
  namespace: openshift-gitops
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - list:
        elements:
          - app: kubevirt
            path: kubevirt
            dependsOn: ""
            namespace: openshift-gitops
          - app: ossm-cp
            path: ossm-cp
            dependsOn: ""
            namespace: istio-system
          # - app: mtv
          #   path: mtv
          #   dependsOn: ossm-cp
          #   namespace: "openshift-gitops"
          - app: rbac
            path: rbac
            dependsOn: ossm-cp
            namespace: "openshift-gitops"
          - app: uplift
            path: uplift
            dependsOn: ossm-cp
            namespace: "openshift-gitops"
          - app: loadmaker
            path: loadmaker
            dependsOn: uplift
            namespace: "openshift-gitops"
          - app: showroom
            path: showroom
            dependsOn: uplift
            namespace: "openshift-gitops"
  template:
    metadata:
      name: {{`'{{.app}}'`}}
      labels:
        demo.redhat.com/application: ""
      annotations:
        notifications.argoproj.io/subscribe.on-sync-succeeded.slack_webhook: ""
    spec:
      project: default
      ignoreDifferences:
      - group: kubevirt.io
        kind: VirtualMachine
        jsonPointers:
        - /spec/template/spec/domain/cpu/cores
        - /spec/running
        - /spec/template/metadata/labels
        - /spec/template/metadata/annotations
        # - /spec/runStrategy
      source:
        repoURL: {{ .Values.workloads.repoUrl }}
        targetRevision: {{ .Values.workloads.repoRef }}
        path: {{`'{{ .path }}'`}}
        helm:
          values: |
            workloads:
              repoURL: {{ .Values.workloads.repoUrl }}
              targetRevision: {{ .Values.workloads.repoRef }}
            user:
              count: {{ .Values.user.count }}
              base: {{ .Values.user.base }}
            deployer:
              domain: {{ .Values.deployer.domain }}
              apiUrl: {{ .Values.deployer.apiUrl }}
      destination:
        server: https://kubernetes.default.svc
        namespace: {{`'{{.namespace}}'`}}
      syncPolicy:
        # automated: {}
        syncOptions:
        #  - ApplyOutOfSyncOnly=true # best with many resources under management
          - CreateNamespace=true
        managedNamespaceMetadata:
          labels:
            depends-on: {{`'{{.dependsOn}}'`}}
